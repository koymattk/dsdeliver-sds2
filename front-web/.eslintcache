[{"C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\index.tsx":"1","C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\App.tsx":"2","C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\NavBar\\index.tsx":"3","C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Home\\index.tsx":"4","C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Footer\\index.tsx":"5","C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Routes.tsx":"6","C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Orders\\index.tsx":"7","C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Orders\\StepsHeader.tsx":"8","C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Orders\\ProductList.tsx":"9","C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Orders\\ProductCard.tsx":"10","C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\api.ts":"11","C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Orders\\OrderLocation.tsx":"12"},{"size":199,"mtime":1609938141588,"results":"13","hashOfConfig":"14"},{"size":151,"mtime":1609955712261,"results":"15","hashOfConfig":"14"},{"size":334,"mtime":1609955600366,"results":"16","hashOfConfig":"14"},{"size":1142,"mtime":1609956096984,"results":"17","hashOfConfig":"14"},{"size":947,"mtime":1609952559249,"results":"18","hashOfConfig":"14"},{"size":537,"mtime":1609955708941,"results":"19","hashOfConfig":"14"},{"size":778,"mtime":1610112917152,"results":"20","hashOfConfig":"14"},{"size":920,"mtime":1609958082131,"results":"21","hashOfConfig":"14"},{"size":492,"mtime":1609965297257,"results":"22","hashOfConfig":"14"},{"size":950,"mtime":1609967425927,"results":"23","hashOfConfig":"14"},{"size":401,"mtime":1610139228864,"results":"24","hashOfConfig":"14"},{"size":2681,"mtime":1610138939879,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"58tyqu",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},"C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\index.tsx",[],["52","53"],"C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\App.tsx",[],"C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\NavBar\\index.tsx",[],"C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Home\\index.tsx",[],"C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Footer\\index.tsx",[],"C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Routes.tsx",[],"C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Orders\\index.tsx",[],"C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Orders\\StepsHeader.tsx",[],"C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Orders\\ProductList.tsx",[],"C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Orders\\ProductCard.tsx",[],"C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\api.ts",[],"C:\\Projetos-JAVA\\dsdeliver\\front-web\\src\\Orders\\OrderLocation.tsx",["54"],"import { useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport AsyncSelect from 'react-select';\r\nimport { fetchLocalMapBox } from '../api';\r\n\r\nconst initialPosition = {\r\n    lat: -10.853308908352348,\r\n    lng: -37.05400591545225,\r\n}\r\n\r\ntype Place = {\r\n    label?:string;\r\n    value?:string;\r\n    position:{\r\n        lat:number;\r\n        lng:number;\r\n    }\r\n}\r\nconst OrderLocation = () => { \r\n    const[adress, setAdress] = useState<Place>({position:initialPosition});\r\n    const loadOptions = async (inputValue: string, callback: (places: Place[]) => void) => {\r\n        const response = await fetchLocalMapBox(inputValue);\r\n      \r\n        const places = response.data.features.map((item: any) => {\r\n          return ({\r\n            label: item.place_name,\r\n            value: item.place_name,\r\n            position: {\r\n              lat: item.center[1],\r\n              lng: item.center[0]\r\n            },\r\n            place: item.place_name,\r\n          });\r\n        });\r\n      \r\n        callback(places);\r\n      };\r\n      \r\n      const handleChangeSelect = (place: Place) => {\r\n       // setAddress(place);\r\n       // onChangeLocation({\r\n        //  latitude: place.position.lat,\r\n        //  longitude: place.position.lng,\r\n       //   address: place.label!\r\n      //+  });\r\n      };\r\n\r\n\r\n    return(\r\n        <div className=\"order-location-container\">\r\n            <div className=\"order-location-content\">\r\n                <h3 className=\"order-location-title\">\r\n                    Selecione onde o pedido deve ser entregue:\r\n                </h3>\r\n                <div className=\"filter-container\">\r\n                    <AsyncSelect\r\n                        placeholder=\"Digite um endereÃ§o para entrega do pedido\"\r\n                        className=\"filter\"\r\n                        loadOptions={loadOptions}\r\n                        onChange={value => handleChangeSelect(value as Place)}\r\n                    />\r\n                </div>\r\n                <MapContainer center={adress.position} zoom={17} scrollWheelZoom={false}>\r\n                    <TileLayer\r\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    />\r\n                    <Marker position={adress.position}>\r\n                        <Popup>\r\n                            A pretty CSS3 popup. <br /> Easily customizable.\r\n                        </Popup>\r\n                    </Marker>\r\n                </MapContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderLocation;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":20,"column":19,"nodeType":"61","messageId":"62","endLine":20,"endColumn":28},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"@typescript-eslint/no-unused-vars","'setAdress' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]